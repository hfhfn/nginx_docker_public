user nginx;
worker_processes auto;
# 错误日志：同时输出到 stderr 和文件
error_log /var/log/nginx/error.log warn;  # 保留文件日志
error_log /dev/stderr warn;              # 额外输出到 STDERR（docker logs 可捕获）
pid        /var/run/nginx.pid;

events {
    worker_connections  8192;
    multi_accept        on;
    use                 epoll;
}

http {
    # 基础配置
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # 添加根路径
    root /usr/share/nginx/html;
    # DNS 解析配置
#     resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=300s;
    # 添加谷歌DNS后无法正常解析容器名，这里设置docker唯一的DNS解析
    resolver 127.0.0.11 valid=10s ipv6=off;
    resolver_timeout 5s;
    # 隐藏 nginx 版本号，提高安全性
    server_tokens off;

    # 日志格式
    log_format main '$remote_addr - $request_id [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" rt=$request_time uct="$upstream_connect_time"';
    # 访问日志：同时输出到 stdout 和文件
    access_log /var/log/nginx/access.log main;  # 保留文件日志
    access_log /dev/stdout main;                # 额外输出到 STDOUT（docker logs 可捕获）

    # 性能优化
    sendfile            on;
    tcp_nopush         on;
    tcp_nodelay        on;
    keepalive_timeout  75s;
    keepalive_requests 1000;

    # 全局映射
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # 缓存配置
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=STATIC:20m inactive=7d use_temp_path=off;

    # 包含子配置
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.conf;
}