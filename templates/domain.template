# ${DOMAIN_NAME} 域名服务配置
# 变量说明：
#   ${DOMAIN_NAME}    -> 替换为实际域名 (如 dify.hfhfn.xyz)
#   ${SSL_CERT_NAME}  -> 证书文件名 (无需后缀)
#   ${UPSTREAM_SERVICE} -> 后端服务地址 (如 backend_service:8000)
#   ${STATIC_PATH}    -> 静态资源路径 (相对容器内路径)

# HTTP强制跳转HTTPS
server {
    listen 80;
    server_name ${DOMAIN_NAME};

    # 安全响应头（即使跳转也生效）
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff";

    # 301永久重定向到HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS服务
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_NAME};

    # █ SSL证书配置
    ssl_certificate      /etc/nginx/certs/${SSL_CERT_NAME}.crt;
    ssl_certificate_key  /etc/nginx/certs/${SSL_CERT_NAME}.key;

    # █ SSL性能优化
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  24h;
    ssl_session_tickets  off;  # 增强安全性
    ssl_protocols        TLSv1.2 TLSv1.3;
    ssl_ciphers          'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # █ 安全响应头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src 'self'";

    # █ 代理到后端服务
    location / {
        proxy_pass http://${UPSTREAM_SERVICE};
        include /etc/nginx/conf.d/10-proxy.conf;  # 引用通用代理配置
        
        # 专属超时设置（按需调整）
        proxy_connect_timeout 60s;
        proxy_read_timeout 300s;
    }

    # █ 静态资源服务
    location /static/ {
        alias /usr/share/nginx/html/${STATIC_PATH}/;  # 容器内绝对路径
        expires 30d;
        access_log off;
        
        # 文件类型覆盖
        types {
            application/javascript js;
            text/css css;
            image/svg+xml svg;
        }
    }

    # █ 健康检查端点
    location = /health {
        allow 127.0.0.1;
        deny all;
        
        proxy_pass http://${UPSTREAM_SERVICE}/health;
        access_log off;
    }

    # █ 错误处理
    error_page 404 = @not_found;
    error_page 500 502 503 504 = @service_unavailable;

    location @not_found {
        return 404 '{"status":404,"message":"Not Found"}';
        add_header Content-Type application/json;
    }

    location @service_unavailable {
        return 503 '{"status":503,"message":"Service Unavailable"}';
        add_header Content-Type application/json;
        add_header Retry-After 30;
    }
}